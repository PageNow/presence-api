Resources:
  PresenceVPCeventsEndPoint682C555D:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: com.amazonaws.us-west-2.events
      VpcId: vpc-0514c9481cc847409
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - Fn::GetAtt:
            - eventsEndPointSG1AD6A545
            - GroupId
      SubnetIds:
        - subnet-04a05887fd48a05c5
        - subnet-01ead743c37e0f664
      VpcEndpointType: Interface
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceVPC/eventsEndPoint/Resource
  rdsProxySGfromPresenceApiStacklambdaSg8EC30D15543231F0D57B:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from PresenceApiStacklambdaSg8EC30D15:5432
      FromPort: 5432
      GroupId: sg-02397ba0c0344ce9c
      SourceSecurityGroupId:
        Fn::GetAtt:
          - lambdaSgD8D93E20
          - GroupId
      ToPort: 5432
    Metadata:
      aws:cdk:path: PresenceApiStack/rdsProxySG/from PresenceApiStacklambdaSg8EC30D15:5432
  redisSg025198AC:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Redis Cluster
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId: vpc-0514c9481cc847409
    Metadata:
      aws:cdk:path: PresenceApiStack/redisSg/Resource
  redisSgfromPresenceApiStacklambdaSg8EC30D156379C22AC7F6:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from PresenceApiStacklambdaSg8EC30D15:6379
      FromPort: 6379
      GroupId:
        Fn::GetAtt:
          - redisSg025198AC
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - lambdaSgD8D93E20
          - GroupId
      ToPort: 6379
    Metadata:
      aws:cdk:path: PresenceApiStack/redisSg/from PresenceApiStacklambdaSg8EC30D15:6379
  lambdaSgD8D93E20:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Lambda functions
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId: vpc-0514c9481cc847409
    Metadata:
      aws:cdk:path: PresenceApiStack/lambdaSg/Resource
  RedisSubnets:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Subnet Group for Redis Cluster
      SubnetIds:
        - subnet-04a05887fd48a05c5
        - subnet-01ead743c37e0f664
      CacheSubnetGroupName: RedisSubnets
    Metadata:
      aws:cdk:path: PresenceApiStack/RedisSubnets
  PresenceCluster:
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      ReplicationGroupDescription: PresenceReplicationGroup
      AutomaticFailoverEnabled: true
      CacheNodeType: cache.t3.small
      CacheSubnetGroupName:
        Ref: RedisSubnets
      Engine: redis
      MultiAZEnabled: true
      NumCacheClusters: 2
      Port: 6379
      SecurityGroupIds:
        - Fn::GetAtt:
            - redisSg025198AC
            - GroupId
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceCluster
  lambdaModuleE2C8C55A:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Ref: AssetParameters76a94b95d56ca2686c80c6a1de45b4fa6eedb211f3b2d625888eb9119262b9e1S3Bucket15EACB62
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters76a94b95d56ca2686c80c6a1de45b4fa6eedb211f3b2d625888eb9119262b9e1S3VersionKey5C1E1150
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters76a94b95d56ca2686c80c6a1de45b4fa6eedb211f3b2d625888eb9119262b9e1S3VersionKey5C1E1150
      CompatibleRuntimes:
        - nodejs12.x
      LayerName: presenceLayer
    Metadata:
      aws:cdk:path: PresenceApiStack/lambdaModule/Resource
      aws:asset:path: /Users/ylee/pagenow/presence-api/src/layer
      aws:asset:property: Content
  heartbeatServiceRoleD63C9062:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: PresenceApiStack/heartbeat/ServiceRole/Resource
  heartbeatServiceRoleDefaultPolicy2B328071:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: rds-db:connect
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :rds-db:us-west-2:257206538165:dbuser:prx-0933f2c6b7e858209/ylee
          - Action: events:PutEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PresenceBus5D952912
                - Arn
          - Action: execute-api:ManageConnections
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":execute-api:us-west-2:257206538165:"
                  - Ref: PresenceWebsocketApi9594EC70
                  - /dev/POST/*
        Version: "2012-10-17"
      PolicyName: heartbeatServiceRoleDefaultPolicy2B328071
      Roles:
        - Ref: heartbeatServiceRoleD63C9062
    Metadata:
      aws:cdk:path: PresenceApiStack/heartbeat/ServiceRole/DefaultPolicy/Resource
  heartbeat8A8E5472:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersef971dff2711b995f77d97f886e129f0426d6e66b9a473cdace92e2de438a07dS3BucketABB367F9
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersef971dff2711b995f77d97f886e129f0426d6e66b9a473cdace92e2de438a07dS3VersionKey62254DDF
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersef971dff2711b995f77d97f886e129f0426d6e66b9a473cdace92e2de438a07dS3VersionKey62254DDF
      Role:
        Fn::GetAtt:
          - heartbeatServiceRoleD63C9062
          - Arn
      Environment:
        Variables:
          REDIS_HOST:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Address
          REDIS_PORT:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Port
          DB_USER: ylee
          DB_HOST: user-api-production-rds-proxy.proxy-cpqo2bmnlxnm.us-west-2.rds.amazonaws.com
          DB_DATABASE: core_db
          DB_PASSWORD: 2dragonvirus
          DB_PORT: "5432"
          EVENT_BUS:
            Ref: PresenceBus5D952912
      Handler: heartbeat.handler
      Layers:
        - Ref: lambdaModuleE2C8C55A
      Runtime: nodejs12.x
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - lambdaSgD8D93E20
              - GroupId
        SubnetIds:
          - subnet-04a05887fd48a05c5
          - subnet-01ead743c37e0f664
    DependsOn:
      - heartbeatServiceRoleDefaultPolicy2B328071
      - heartbeatServiceRoleD63C9062
    Metadata:
      aws:cdk:path: PresenceApiStack/heartbeat/Resource
      aws:asset:path: /Users/ylee/pagenow/presence-api/src/functions/heartbeat
      aws:asset:property: Code
  statusServiceRole987113E6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: PresenceApiStack/status/ServiceRole/Resource
  statusServiceRoleDefaultPolicy48AB5C59:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: rds-db:connect
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :rds-db:us-west-2:257206538165:dbuser:prx-0933f2c6b7e858209/ylee
        Version: "2012-10-17"
      PolicyName: statusServiceRoleDefaultPolicy48AB5C59
      Roles:
        - Ref: statusServiceRole987113E6
    Metadata:
      aws:cdk:path: PresenceApiStack/status/ServiceRole/DefaultPolicy/Resource
  status13EA9EF7:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersc9099862ce7d3cf08e88999e00c06aeec043fadeecbe65d08e6d38a0aba86b82S3BucketA56956B1
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersc9099862ce7d3cf08e88999e00c06aeec043fadeecbe65d08e6d38a0aba86b82S3VersionKey5E698AAB
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersc9099862ce7d3cf08e88999e00c06aeec043fadeecbe65d08e6d38a0aba86b82S3VersionKey5E698AAB
      Role:
        Fn::GetAtt:
          - statusServiceRole987113E6
          - Arn
      Environment:
        Variables:
          REDIS_HOST:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Address
          REDIS_PORT:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Port
          DB_USER: ylee
          DB_HOST: user-api-production-rds-proxy.proxy-cpqo2bmnlxnm.us-west-2.rds.amazonaws.com
          DB_DATABASE: core_db
          DB_PASSWORD: 2dragonvirus
          DB_PORT: "5432"
      Handler: status.handler
      Layers:
        - Ref: lambdaModuleE2C8C55A
      Runtime: nodejs12.x
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - lambdaSgD8D93E20
              - GroupId
        SubnetIds:
          - subnet-04a05887fd48a05c5
          - subnet-01ead743c37e0f664
    DependsOn:
      - statusServiceRoleDefaultPolicy48AB5C59
      - statusServiceRole987113E6
    Metadata:
      aws:cdk:path: PresenceApiStack/status/Resource
      aws:asset:path: /Users/ylee/pagenow/presence-api/src/functions/status
      aws:asset:property: Code
  disconnectServiceRole372F5647:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: PresenceApiStack/disconnect/ServiceRole/Resource
  disconnectServiceRoleDefaultPolicy43698ECC:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: rds-db:connect
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :rds-db:us-west-2:257206538165:dbuser:prx-0933f2c6b7e858209/ylee
          - Action: events:PutEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PresenceBus5D952912
                - Arn
        Version: "2012-10-17"
      PolicyName: disconnectServiceRoleDefaultPolicy43698ECC
      Roles:
        - Ref: disconnectServiceRole372F5647
    Metadata:
      aws:cdk:path: PresenceApiStack/disconnect/ServiceRole/DefaultPolicy/Resource
  disconnect829B70D0:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameterse1e526eddaad559b80df4b12758173f22a837dba8bc3ae48ff7970ea9fa187b0S3Bucket6A9B315A
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse1e526eddaad559b80df4b12758173f22a837dba8bc3ae48ff7970ea9fa187b0S3VersionKey5CB52CA2
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameterse1e526eddaad559b80df4b12758173f22a837dba8bc3ae48ff7970ea9fa187b0S3VersionKey5CB52CA2
      Role:
        Fn::GetAtt:
          - disconnectServiceRole372F5647
          - Arn
      Environment:
        Variables:
          REDIS_HOST:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Address
          REDIS_PORT:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Port
          DB_USER: ylee
          DB_HOST: user-api-production-rds-proxy.proxy-cpqo2bmnlxnm.us-west-2.rds.amazonaws.com
          DB_DATABASE: core_db
          DB_PASSWORD: 2dragonvirus
          DB_PORT: "5432"
          EVENT_BUS:
            Ref: PresenceBus5D952912
      Handler: disconnect.handler
      Layers:
        - Ref: lambdaModuleE2C8C55A
      Runtime: nodejs12.x
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - lambdaSgD8D93E20
              - GroupId
        SubnetIds:
          - subnet-04a05887fd48a05c5
          - subnet-01ead743c37e0f664
    DependsOn:
      - disconnectServiceRoleDefaultPolicy43698ECC
      - disconnectServiceRole372F5647
    Metadata:
      aws:cdk:path: PresenceApiStack/disconnect/Resource
      aws:asset:path: /Users/ylee/pagenow/presence-api/src/functions/disconnect
      aws:asset:property: Code
  timeoutServiceRole175F298C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: PresenceApiStack/timeout/ServiceRole/Resource
  timeoutServiceRoleDefaultPolicyC545BCB2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: rds-db:connect
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :rds-db:us-west-2:257206538165:dbuser:prx-0933f2c6b7e858209/ylee
          - Action: events:PutEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PresenceBus5D952912
                - Arn
        Version: "2012-10-17"
      PolicyName: timeoutServiceRoleDefaultPolicyC545BCB2
      Roles:
        - Ref: timeoutServiceRole175F298C
    Metadata:
      aws:cdk:path: PresenceApiStack/timeout/ServiceRole/DefaultPolicy/Resource
  timeoutD1A38E79:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters2ac79fecf84f3ba901d27913166f7d9cb869cfc44f5c2540d2d4c66c287b96b9S3Bucket3F2BBAC7
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters2ac79fecf84f3ba901d27913166f7d9cb869cfc44f5c2540d2d4c66c287b96b9S3VersionKeyA723C277
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters2ac79fecf84f3ba901d27913166f7d9cb869cfc44f5c2540d2d4c66c287b96b9S3VersionKeyA723C277
      Role:
        Fn::GetAtt:
          - timeoutServiceRole175F298C
          - Arn
      Environment:
        Variables:
          REDIS_HOST:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Address
          REDIS_PORT:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Port
          DB_USER: ylee
          DB_HOST: user-api-production-rds-proxy.proxy-cpqo2bmnlxnm.us-west-2.rds.amazonaws.com
          DB_DATABASE: core_db
          DB_PASSWORD: 2dragonvirus
          DB_PORT: "5432"
          TIMEOUT: "10000"
          EVENT_BUS:
            Ref: PresenceBus5D952912
      Handler: timeout.handler
      Layers:
        - Ref: lambdaModuleE2C8C55A
      Runtime: nodejs12.x
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - lambdaSgD8D93E20
              - GroupId
        SubnetIds:
          - subnet-04a05887fd48a05c5
          - subnet-01ead743c37e0f664
    DependsOn:
      - timeoutServiceRoleDefaultPolicyC545BCB2
      - timeoutServiceRole175F298C
    Metadata:
      aws:cdk:path: PresenceApiStack/timeout/Resource
      aws:asset:path: /Users/ylee/pagenow/presence-api/src/functions/timeout
      aws:asset:property: Code
  updatepresenceServiceRole3303CE59:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: PresenceApiStack/update_presence/ServiceRole/Resource
  updatepresenceServiceRoleDefaultPolicy31CBD0C1:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: rds-db:connect
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :rds-db:us-west-2:257206538165:dbuser:prx-0933f2c6b7e858209/ylee
        Version: "2012-10-17"
      PolicyName: updatepresenceServiceRoleDefaultPolicy31CBD0C1
      Roles:
        - Ref: updatepresenceServiceRole3303CE59
    Metadata:
      aws:cdk:path: PresenceApiStack/update_presence/ServiceRole/DefaultPolicy/Resource
  updatepresence26EF7F6D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters5e44d2fdd7f8f5861332f51d1cf1b092c108d137c79dbe5b3d3bd489826bb272S3Bucket106F56FA
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters5e44d2fdd7f8f5861332f51d1cf1b092c108d137c79dbe5b3d3bd489826bb272S3VersionKeyBE076A88
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters5e44d2fdd7f8f5861332f51d1cf1b092c108d137c79dbe5b3d3bd489826bb272S3VersionKeyBE076A88
      Role:
        Fn::GetAtt:
          - updatepresenceServiceRole3303CE59
          - Arn
      Environment:
        Variables:
          REDIS_HOST:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Address
          REDIS_PORT:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Port
          DB_USER: ylee
          DB_HOST: user-api-production-rds-proxy.proxy-cpqo2bmnlxnm.us-west-2.rds.amazonaws.com
          DB_DATABASE: core_db
          DB_PASSWORD: 2dragonvirus
          DB_PORT: "5432"
      Handler: update_presence.handler
      Layers:
        - Ref: lambdaModuleE2C8C55A
      Runtime: nodejs12.x
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - lambdaSgD8D93E20
              - GroupId
        SubnetIds:
          - subnet-04a05887fd48a05c5
          - subnet-01ead743c37e0f664
    DependsOn:
      - updatepresenceServiceRoleDefaultPolicy31CBD0C1
      - updatepresenceServiceRole3303CE59
    Metadata:
      aws:cdk:path: PresenceApiStack/update_presence/Resource
      aws:asset:path: /Users/ylee/pagenow/presence-api/src/functions/update_presence
      aws:asset:property: Code
  connectServiceRoleE059EF99:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: PresenceApiStack/connect/ServiceRole/Resource
  connectEB2081F1:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters9ad807637ff239132269cd9b57c1b74a11f62616005dd978563c9dbed877f27cS3Bucket97807D65
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters9ad807637ff239132269cd9b57c1b74a11f62616005dd978563c9dbed877f27cS3VersionKeyB71B22BD
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters9ad807637ff239132269cd9b57c1b74a11f62616005dd978563c9dbed877f27cS3VersionKeyB71B22BD
      Role:
        Fn::GetAtt:
          - connectServiceRoleE059EF99
          - Arn
      Environment:
        Variables:
          REDIS_HOST:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Address
          REDIS_PORT:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Port
      Handler: connect.handler
      Layers:
        - Ref: lambdaModuleE2C8C55A
      Runtime: nodejs12.x
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - lambdaSgD8D93E20
              - GroupId
        SubnetIds:
          - subnet-0bf18262270a94742
          - subnet-06ce0f88faa21b358
    DependsOn:
      - connectServiceRoleE059EF99
    Metadata:
      aws:cdk:path: PresenceApiStack/connect/Resource
      aws:asset:path: /Users/ylee/pagenow/presence-api/src/functions/connect
      aws:asset:property: Code
  addusersServiceRole01AE3677:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: PresenceApiStack/add_users/ServiceRole/Resource
  addusersServiceRoleDefaultPolicy07FCDFBA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: rds-db:connect
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :rds-db:us-west-2:257206538165:dbuser:prx-0933f2c6b7e858209/ylee
        Version: "2012-10-17"
      PolicyName: addusersServiceRoleDefaultPolicy07FCDFBA
      Roles:
        - Ref: addusersServiceRole01AE3677
    Metadata:
      aws:cdk:path: PresenceApiStack/add_users/ServiceRole/DefaultPolicy/Resource
  addusers55677B14:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters8493ecc6f1c112594d2591a57377442e259402492c63c8117dcef281df67931dS3Bucket97E4C1D0
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters8493ecc6f1c112594d2591a57377442e259402492c63c8117dcef281df67931dS3VersionKeyA7A5A6D7
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters8493ecc6f1c112594d2591a57377442e259402492c63c8117dcef281df67931dS3VersionKeyA7A5A6D7
      Role:
        Fn::GetAtt:
          - addusersServiceRole01AE3677
          - Arn
      Environment:
        Variables:
          REDIS_HOST:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Address
          REDIS_PORT:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Port
          DB_USER: ylee
          DB_HOST: user-api-production-rds-proxy.proxy-cpqo2bmnlxnm.us-west-2.rds.amazonaws.com
          DB_DATABASE: core_db
          DB_PASSWORD: 2dragonvirus
          DB_PORT: "5432"
      Handler: add_users.handler
      Layers:
        - Ref: lambdaModuleE2C8C55A
      Runtime: nodejs12.x
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - lambdaSgD8D93E20
              - GroupId
        SubnetIds:
          - subnet-04a05887fd48a05c5
          - subnet-01ead743c37e0f664
    DependsOn:
      - addusersServiceRoleDefaultPolicy07FCDFBA
      - addusersServiceRole01AE3677
    Metadata:
      aws:cdk:path: PresenceApiStack/add_users/Resource
      aws:asset:path: /Users/ylee/pagenow/presence-api/src/test_functions/add_users
      aws:asset:property: Code
  addfriendshipServiceRole5068AB8B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: PresenceApiStack/add_friendship/ServiceRole/Resource
  addfriendshipServiceRoleDefaultPolicy6E7B986F:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: rds-db:connect
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :rds-db:us-west-2:257206538165:dbuser:prx-0933f2c6b7e858209/ylee
        Version: "2012-10-17"
      PolicyName: addfriendshipServiceRoleDefaultPolicy6E7B986F
      Roles:
        - Ref: addfriendshipServiceRole5068AB8B
    Metadata:
      aws:cdk:path: PresenceApiStack/add_friendship/ServiceRole/DefaultPolicy/Resource
  addfriendship90EF3735:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersd32f183157995b9defe578ae7408426d95c203479c7cd99d3976c85870754313S3Bucket7F173C80
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersd32f183157995b9defe578ae7408426d95c203479c7cd99d3976c85870754313S3VersionKey7E0F83FB
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersd32f183157995b9defe578ae7408426d95c203479c7cd99d3976c85870754313S3VersionKey7E0F83FB
      Role:
        Fn::GetAtt:
          - addfriendshipServiceRole5068AB8B
          - Arn
      Environment:
        Variables:
          REDIS_HOST:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Address
          REDIS_PORT:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Port
          DB_USER: ylee
          DB_HOST: user-api-production-rds-proxy.proxy-cpqo2bmnlxnm.us-west-2.rds.amazonaws.com
          DB_DATABASE: core_db
          DB_PASSWORD: 2dragonvirus
          DB_PORT: "5432"
      Handler: add_friendship.handler
      Layers:
        - Ref: lambdaModuleE2C8C55A
      Runtime: nodejs12.x
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - lambdaSgD8D93E20
              - GroupId
        SubnetIds:
          - subnet-04a05887fd48a05c5
          - subnet-01ead743c37e0f664
    DependsOn:
      - addfriendshipServiceRoleDefaultPolicy6E7B986F
      - addfriendshipServiceRole5068AB8B
    Metadata:
      aws:cdk:path: PresenceApiStack/add_friendship/Resource
      aws:asset:path: /Users/ylee/pagenow/presence-api/src/test_functions/add_friendship
      aws:asset:property: Code
  testconnectServiceRoleFC7EAA39:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: PresenceApiStack/test_connect/ServiceRole/Resource
  testconnectServiceRoleDefaultPolicy73CA1575:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: rds-db:connect
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :rds-db:us-west-2:257206538165:dbuser:prx-0933f2c6b7e858209/ylee
        Version: "2012-10-17"
      PolicyName: testconnectServiceRoleDefaultPolicy73CA1575
      Roles:
        - Ref: testconnectServiceRoleFC7EAA39
    Metadata:
      aws:cdk:path: PresenceApiStack/test_connect/ServiceRole/DefaultPolicy/Resource
  testconnect7ADB2CC4:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParameters3329414b9eae51ff2ac7b7a43053dfbedfa62a89bdf1c034596455f9728f1533S3Bucket6591DBF0
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters3329414b9eae51ff2ac7b7a43053dfbedfa62a89bdf1c034596455f9728f1533S3VersionKey8022A003
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParameters3329414b9eae51ff2ac7b7a43053dfbedfa62a89bdf1c034596455f9728f1533S3VersionKey8022A003
      Role:
        Fn::GetAtt:
          - testconnectServiceRoleFC7EAA39
          - Arn
      Environment:
        Variables:
          REDIS_HOST:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Address
          REDIS_PORT:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Port
          DB_USER: ylee
          DB_HOST: user-api-production-rds-proxy.proxy-cpqo2bmnlxnm.us-west-2.rds.amazonaws.com
          DB_DATABASE: core_db
          DB_PASSWORD: 2dragonvirus
          DB_PORT: "5432"
      Handler: test_connect.handler
      Layers:
        - Ref: lambdaModuleE2C8C55A
      Runtime: nodejs12.x
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - lambdaSgD8D93E20
              - GroupId
        SubnetIds:
          - subnet-04a05887fd48a05c5
          - subnet-01ead743c37e0f664
    DependsOn:
      - testconnectServiceRoleDefaultPolicy73CA1575
      - testconnectServiceRoleFC7EAA39
    Metadata:
      aws:cdk:path: PresenceApiStack/test_connect/Resource
      aws:asset:path: /Users/ylee/pagenow/presence-api/src/test_functions/test_connect
      aws:asset:property: Code
  testheartbeatServiceRole80C5A240:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: PresenceApiStack/test_heartbeat/ServiceRole/Resource
  testheartbeatServiceRoleDefaultPolicy71EE384D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: rds-db:connect
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :rds-db:us-west-2:257206538165:dbuser:prx-0933f2c6b7e858209/ylee
        Version: "2012-10-17"
      PolicyName: testheartbeatServiceRoleDefaultPolicy71EE384D
      Roles:
        - Ref: testheartbeatServiceRole80C5A240
    Metadata:
      aws:cdk:path: PresenceApiStack/test_heartbeat/ServiceRole/DefaultPolicy/Resource
  testheartbeatD7A38B19:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersc205e39fe917588737fe5e4a09d2f24d243dfe0a136300a9eab348fd75d129a2S3BucketD44B51EE
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersc205e39fe917588737fe5e4a09d2f24d243dfe0a136300a9eab348fd75d129a2S3VersionKey5E0F095F
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersc205e39fe917588737fe5e4a09d2f24d243dfe0a136300a9eab348fd75d129a2S3VersionKey5E0F095F
      Role:
        Fn::GetAtt:
          - testheartbeatServiceRole80C5A240
          - Arn
      Environment:
        Variables:
          REDIS_HOST:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Address
          REDIS_PORT:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Port
          DB_USER: ylee
          DB_HOST: user-api-production-rds-proxy.proxy-cpqo2bmnlxnm.us-west-2.rds.amazonaws.com
          DB_DATABASE: core_db
          DB_PASSWORD: 2dragonvirus
          DB_PORT: "5432"
      Handler: test_heartbeat.handler
      Layers:
        - Ref: lambdaModuleE2C8C55A
      Runtime: nodejs12.x
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - lambdaSgD8D93E20
              - GroupId
        SubnetIds:
          - subnet-04a05887fd48a05c5
          - subnet-01ead743c37e0f664
    DependsOn:
      - testheartbeatServiceRoleDefaultPolicy71EE384D
      - testheartbeatServiceRole80C5A240
    Metadata:
      aws:cdk:path: PresenceApiStack/test_heartbeat/Resource
      aws:asset:path: /Users/ylee/pagenow/presence-api/src/test_functions/test_heartbeat
      aws:asset:property: Code
  getpresenceServiceRole2580782F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: PresenceApiStack/get_presence/ServiceRole/Resource
  getpresenceServiceRoleDefaultPolicy8CDE2247:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: rds-db:connect
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :rds-db:us-west-2:257206538165:dbuser:prx-0933f2c6b7e858209/ylee
        Version: "2012-10-17"
      PolicyName: getpresenceServiceRoleDefaultPolicy8CDE2247
      Roles:
        - Ref: getpresenceServiceRole2580782F
    Metadata:
      aws:cdk:path: PresenceApiStack/get_presence/ServiceRole/DefaultPolicy/Resource
  getpresenceDC17265E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersbd41b5ccf2a603860e796b7d17882153e4e88060e65d0d0328cdb019103c9ef5S3Bucket4B1CB4A0
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbd41b5ccf2a603860e796b7d17882153e4e88060e65d0d0328cdb019103c9ef5S3VersionKey98F22E2E
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersbd41b5ccf2a603860e796b7d17882153e4e88060e65d0d0328cdb019103c9ef5S3VersionKey98F22E2E
      Role:
        Fn::GetAtt:
          - getpresenceServiceRole2580782F
          - Arn
      Environment:
        Variables:
          REDIS_HOST:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Address
          REDIS_PORT:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Port
          DB_USER: ylee
          DB_HOST: user-api-production-rds-proxy.proxy-cpqo2bmnlxnm.us-west-2.rds.amazonaws.com
          DB_DATABASE: core_db
          DB_PASSWORD: 2dragonvirus
          DB_PORT: "5432"
      Handler: get_presence.handler
      Layers:
        - Ref: lambdaModuleE2C8C55A
      Runtime: nodejs12.x
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - lambdaSgD8D93E20
              - GroupId
        SubnetIds:
          - subnet-04a05887fd48a05c5
          - subnet-01ead743c37e0f664
    DependsOn:
      - getpresenceServiceRoleDefaultPolicy8CDE2247
      - getpresenceServiceRole2580782F
    Metadata:
      aws:cdk:path: PresenceApiStack/get_presence/Resource
      aws:asset:path: /Users/ylee/pagenow/presence-api/src/test_functions/get_presence
      aws:asset:property: Code
  getuserinfoServiceRole302971B0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: PresenceApiStack/get_user_info/ServiceRole/Resource
  getuserinfoServiceRoleDefaultPolicy72E6C253:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: rds-db:connect
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :rds-db:us-west-2:257206538165:dbuser:prx-0933f2c6b7e858209/ylee
        Version: "2012-10-17"
      PolicyName: getuserinfoServiceRoleDefaultPolicy72E6C253
      Roles:
        - Ref: getuserinfoServiceRole302971B0
    Metadata:
      aws:cdk:path: PresenceApiStack/get_user_info/ServiceRole/DefaultPolicy/Resource
  getuserinfo1A1383D6:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersad491858bff2daae3b82957d0d148f31813e6c8690bc56a59d64ce7f5f86fca4S3Bucket31C5E950
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersad491858bff2daae3b82957d0d148f31813e6c8690bc56a59d64ce7f5f86fca4S3VersionKey6BC3326D
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersad491858bff2daae3b82957d0d148f31813e6c8690bc56a59d64ce7f5f86fca4S3VersionKey6BC3326D
      Role:
        Fn::GetAtt:
          - getuserinfoServiceRole302971B0
          - Arn
      Environment:
        Variables:
          REDIS_HOST:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Address
          REDIS_PORT:
            Fn::GetAtt:
              - PresenceCluster
              - PrimaryEndPoint.Port
          DB_USER: ylee
          DB_HOST: user-api-production-rds-proxy.proxy-cpqo2bmnlxnm.us-west-2.rds.amazonaws.com
          DB_DATABASE: core_db
          DB_PASSWORD: 2dragonvirus
          DB_PORT: "5432"
      Handler: get_user_info.handler
      Layers:
        - Ref: lambdaModuleE2C8C55A
      Runtime: nodejs12.x
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - lambdaSgD8D93E20
              - GroupId
        SubnetIds:
          - subnet-04a05887fd48a05c5
          - subnet-01ead743c37e0f664
    DependsOn:
      - getuserinfoServiceRoleDefaultPolicy72E6C253
      - getuserinfoServiceRole302971B0
    Metadata:
      aws:cdk:path: PresenceApiStack/get_user_info/Resource
      aws:asset:path: /Users/ylee/pagenow/presence-api/src/test_functions/get_user_info
      aws:asset:property: Code
  ondisconnectServiceRoleC1A63C53:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: PresenceApiStack/on_disconnect/ServiceRole/Resource
  ondisconnectServiceRoleDefaultPolicy4D06E5F1:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: rds-db:connect
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :rds-db:us-west-2:257206538165:dbuser:prx-0933f2c6b7e858209/ylee
          - Action: appsync:GraphQL
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - PresenceAPI097D0E1D
                      - Arn
                  - /*
        Version: "2012-10-17"
      PolicyName: ondisconnectServiceRoleDefaultPolicy4D06E5F1
      Roles:
        - Ref: ondisconnectServiceRoleC1A63C53
    Metadata:
      aws:cdk:path: PresenceApiStack/on_disconnect/ServiceRole/DefaultPolicy/Resource
  ondisconnect006B6FED:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersa28cef2fa03a13fb8a3eb5c0bb8dc22495f0ab2d68c0436b1451ae578424829aS3Bucket4E6B0FF8
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa28cef2fa03a13fb8a3eb5c0bb8dc22495f0ab2d68c0436b1451ae578424829aS3VersionKey416B108B
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersa28cef2fa03a13fb8a3eb5c0bb8dc22495f0ab2d68c0436b1451ae578424829aS3VersionKey416B108B
      Role:
        Fn::GetAtt:
          - ondisconnectServiceRoleC1A63C53
          - Arn
      Environment:
        Variables:
          DB_USER: ylee
          DB_HOST: user-api-production-rds-proxy.proxy-cpqo2bmnlxnm.us-west-2.rds.amazonaws.com
          DB_DATABASE: core_db
          DB_PASSWORD: 2dragonvirus
          DB_PORT: "5432"
          GRAPHQL_ENDPOINT:
            Fn::GetAtt:
              - PresenceAPI097D0E1D
              - GraphQLUrl
      Handler: on_disconnect.handler
      Layers:
        - Ref: lambdaModuleE2C8C55A
      Runtime: nodejs12.x
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - lambdaSgD8D93E20
              - GroupId
        SubnetIds:
          - subnet-04a05887fd48a05c5
          - subnet-01ead743c37e0f664
    DependsOn:
      - ondisconnectServiceRoleDefaultPolicy4D06E5F1
      - ondisconnectServiceRoleC1A63C53
    Metadata:
      aws:cdk:path: PresenceApiStack/on_disconnect/Resource
      aws:asset:path: /Users/ylee/pagenow/presence-api/src/functions/on_disconnect
      aws:asset:property: Code
  PresenceAPIApiLogsRole892F61D3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceAPI/ApiLogsRole/Resource
  PresenceAPI097D0E1D:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      AuthenticationType: AMAZON_COGNITO_USER_POOLS
      Name: PresenceAPI
      AdditionalAuthenticationProviders:
        - AuthenticationType: AWS_IAM
      LogConfig:
        CloudWatchLogsRoleArn:
          Fn::GetAtt:
            - PresenceAPIApiLogsRole892F61D3
            - Arn
        FieldLogLevel: ALL
      UserPoolConfig:
        AwsRegion: us-west-2
        DefaultAction: ALLOW
        UserPoolId: us-west-2_32JgtVKUN
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceAPI/Resource
  PresenceAPISchemaB664B62D:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      Definition: |
        schema {
          query: Query
          mutation: Mutation
          subscription: Subscription
        }
        enum Status {
          online
          offline
        }
        type Presence @aws_cognito_user_pools @aws_iam {
          userId: ID!
          status: Status!
          url: String!
          title: String!
        }
        type Query {
          heartbeat(url: String! title: String!): Presence
          status(userId: ID!): Presence
        }
        type Mutation {
          connect(url: String! title: String!): Presence
          disconnect: Presence
          disconnected(userId: ID!): Presence
          @aws_iam
        }
        type Subscription {
          onStatus(userId: ID!): Presence
          @aws_subscribe(mutations: ["connect", "disconnected"])
        }
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceAPI/Schema
  PresenceAPIheartbeatDSServiceRole8F401150:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceAPI/heartbeatDS/ServiceRole/Resource
  PresenceAPIheartbeatDSServiceRoleDefaultPolicy04B94A47:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - heartbeat8A8E5472
                - Arn
        Version: "2012-10-17"
      PolicyName: PresenceAPIheartbeatDSServiceRoleDefaultPolicy04B94A47
      Roles:
        - Ref: PresenceAPIheartbeatDSServiceRole8F401150
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceAPI/heartbeatDS/ServiceRole/DefaultPolicy/Resource
  PresenceAPIheartbeatDS73E9B382:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      Name: heartbeatDS
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
            - heartbeat8A8E5472
            - Arn
      ServiceRoleArn:
        Fn::GetAtt:
          - PresenceAPIheartbeatDSServiceRole8F401150
          - Arn
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceAPI/heartbeatDS/Resource
  PresenceAPIheartbeatDSQueryheartbeatResolver5E0CB2B3:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      FieldName: heartbeat
      TypeName: Query
      DataSourceName: heartbeatDS
      Kind: UNIT
    DependsOn:
      - PresenceAPIheartbeatDS73E9B382
      - PresenceAPISchemaB664B62D
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceAPI/heartbeatDS/QueryheartbeatResolver/Resource
  PresenceAPIheartbeatDSMutationconnectResolver537D2CEA:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      FieldName: connect
      TypeName: Mutation
      DataSourceName: heartbeatDS
      Kind: UNIT
    DependsOn:
      - PresenceAPIheartbeatDS73E9B382
      - PresenceAPISchemaB664B62D
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceAPI/heartbeatDS/MutationconnectResolver/Resource
  PresenceAPIstatusDSServiceRole1B0479EF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceAPI/statusDS/ServiceRole/Resource
  PresenceAPIstatusDSServiceRoleDefaultPolicy0C979BD8:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - status13EA9EF7
                - Arn
        Version: "2012-10-17"
      PolicyName: PresenceAPIstatusDSServiceRoleDefaultPolicy0C979BD8
      Roles:
        - Ref: PresenceAPIstatusDSServiceRole1B0479EF
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceAPI/statusDS/ServiceRole/DefaultPolicy/Resource
  PresenceAPIstatusDSD3865C08:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      Name: statusDS
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
            - status13EA9EF7
            - Arn
      ServiceRoleArn:
        Fn::GetAtt:
          - PresenceAPIstatusDSServiceRole1B0479EF
          - Arn
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceAPI/statusDS/Resource
  PresenceAPIstatusDSQuerystatusResolver0F8E4FA8:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      FieldName: status
      TypeName: Query
      DataSourceName: statusDS
      Kind: UNIT
    DependsOn:
      - PresenceAPISchemaB664B62D
      - PresenceAPIstatusDSD3865C08
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceAPI/statusDS/QuerystatusResolver/Resource
  PresenceAPIdisconnectDSServiceRoleE16B55D6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceAPI/disconnectDS/ServiceRole/Resource
  PresenceAPIdisconnectDSServiceRoleDefaultPolicyE246A046:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - disconnect829B70D0
                - Arn
        Version: "2012-10-17"
      PolicyName: PresenceAPIdisconnectDSServiceRoleDefaultPolicyE246A046
      Roles:
        - Ref: PresenceAPIdisconnectDSServiceRoleE16B55D6
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceAPI/disconnectDS/ServiceRole/DefaultPolicy/Resource
  PresenceAPIdisconnectDS924FC7F3:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      Name: disconnectDS
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn:
          Fn::GetAtt:
            - disconnect829B70D0
            - Arn
      ServiceRoleArn:
        Fn::GetAtt:
          - PresenceAPIdisconnectDSServiceRoleE16B55D6
          - Arn
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceAPI/disconnectDS/Resource
  PresenceAPIdisconnectDSMutationdisconnectResolverA809BE03:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      FieldName: disconnect
      TypeName: Mutation
      DataSourceName: disconnectDS
      Kind: UNIT
    DependsOn:
      - PresenceAPIdisconnectDS924FC7F3
      - PresenceAPISchemaB664B62D
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceAPI/disconnectDS/MutationdisconnectResolver/Resource
  PresenceAPIdisconnectedDS28B6D0E3:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      Name: disconnectedDS
      Type: NONE
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceAPI/disconnectedDS/Resource
  PresenceAPIdisconnectedDSMutationdisconnectedResolver9E27C20C:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId:
        Fn::GetAtt:
          - PresenceAPI097D0E1D
          - ApiId
      FieldName: disconnected
      TypeName: Mutation
      DataSourceName: disconnectedDS
      Kind: UNIT
      RequestMappingTemplate: "

        \            {

        \                \"version\": \"2017-02-28\",

        \                \"payload\": {

        \                    \"userId\": \"$context.arguments.userId\",

        \                    \"status\": \"offline\",

        \                    \"url\": \"\",

        \                    \"title\": \"\"

        \                }

        \            }

        \        "
      ResponseMappingTemplate: "

        \            $util.toJson($context.result)

        \        "
    DependsOn:
      - PresenceAPIdisconnectedDS28B6D0E3
      - PresenceAPISchemaB664B62D
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceAPI/disconnectedDS/MutationdisconnectedResolver/Resource
  PresenceBus5D952912:
    Type: AWS::Events::EventBus
    Properties:
      Name: PresenceApiStackPresenceBus7A70F491
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceBus/Resource
  PresenceTimeoutRuleFC1C372B:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: cron(* * * * ? *)
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - timeoutD1A38E79
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceTimeoutRule/Resource
  PresenceTimeoutRuleAllowEventRulePresenceApiStacktimeout1089E917861673E1:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - timeoutD1A38E79
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - PresenceTimeoutRuleFC1C372B
          - Arn
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceTimeoutRule/AllowEventRulePresenceApiStacktimeout1089E917
  PresenceDisconnectRule61912715:
    Type: AWS::Events::Rule
    Properties:
      Description: Rule for presence disconnection
      EventBusName:
        Ref: PresenceBus5D952912
      EventPattern:
        detail-type:
          - presence.disconnected
        source:
          - api.presence
      State: ENABLED
      Targets:
        - Arn:
            Fn::GetAtt:
              - ondisconnect006B6FED
              - Arn
          Id: Target0
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceDisconnectRule/Resource
  PresenceDisconnectRuleAllowEventRulePresenceApiStackondisconnectD6D10CE158F0B502:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ondisconnect006B6FED
          - Arn
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
          - PresenceDisconnectRule61912715
          - Arn
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceDisconnectRule/AllowEventRulePresenceApiStackondisconnectD6D10CE1
  eventsEndPointSG1AD6A545:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EventBridge interface endpoint SG
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 10.0.0.0/16
          Description: from 10.0.0.0/16:443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      VpcId: vpc-0514c9481cc847409
    Metadata:
      aws:cdk:path: PresenceApiStack/eventsEndPointSG/Resource
  eventsEndPointSGfromPresenceApiStacklambdaSg8EC30D15803C8A1C8F:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from PresenceApiStacklambdaSg8EC30D15:80
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - eventsEndPointSG1AD6A545
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - lambdaSgD8D93E20
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: PresenceApiStack/eventsEndPointSG/from PresenceApiStacklambdaSg8EC30D15:80
  PresenceWebsocketApi9594EC70:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: PresenceWebsocketApi
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceWebsocketApi/Resource
  PresenceWebsocketApiconnectRoutePresenceApiStackPresenceWebsocketApiconnectRoute8614CDCDPermissionD1359FD9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - connectEB2081F1
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:us-west-2:257206538165:"
            - Ref: PresenceWebsocketApi9594EC70
            - /*/*$connect
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceWebsocketApi/$connect-Route/PresenceApiStackPresenceWebsocketApiconnectRoute8614CDCD-Permission
  PresenceWebsocketApiconnectRouteWebSocketIntegration27e4d042886c8224be61abcfc3cd60fc92765A21:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: PresenceWebsocketApi9594EC70
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - :apigateway:us-west-2:lambda:path/2015-03-31/functions/
            - Fn::GetAtt:
                - connectEB2081F1
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceWebsocketApi/$connect-Route/WebSocketIntegration-27e4d042886c8224be61abcfc3cd60fc/Resource
  PresenceWebsocketApiconnectRoute5280B949:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: PresenceWebsocketApi9594EC70
      RouteKey: $connect
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: PresenceWebsocketApiconnectRouteWebSocketIntegration27e4d042886c8224be61abcfc3cd60fc92765A21
    Metadata:
      aws:cdk:path: PresenceApiStack/PresenceWebsocketApi/$connect-Route/Resource
  DevStage520A913F:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: PresenceWebsocketApi9594EC70
      StageName: dev
      AutoDeploy: true
    Metadata:
      aws:cdk:path: PresenceApiStack/DevStage/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/2VSXVPCMBD8LbyHQOsfUPBjmGG0tjP4fKRnjbRJzCU4nU7/u0lABHy63btNutlrxrM84/PJLXzTVNS72SC0RT5UDsSOlUjaW4Hsjghd6DVSNWypFTnrhWPLd1WAhQ4d2khevDM+tX9PjixePKDI+bBSQfYOAjdGPKjaaKmSdlMsz2mFwlvp+iervVmpxiIRu2j+U40MWyAnBYiPYD6O/VahO6lLNG2YOqnV8UAL3bYGPqyhR7tBS2EUlRf80SvhjoNzXKDtJEXJyOhmCjEd4imkwPnCix26BRAyCR0fSt1ichFroYOTPt2SUEjIGOqV4MOTBfPx1d4ZGceJva4vWRUe2AFbJ/f34KA6LCgozlhMv90fdnLCz1rhnyZEtkcVXA8PsS48RfEJl/5oOdToUDbg8Bv6fdjjG24rHV94tBbLqVdq7/CPxp03Fn6Du6JX4viDpa8mMI4jU7pG/kmzfZbzfM7zySdJObVeOdkhLw/1BzUNllPEAgAA
    Metadata:
      aws:cdk:path: PresenceApiStack/CDKMetadata/Default
Parameters:
  AssetParameters76a94b95d56ca2686c80c6a1de45b4fa6eedb211f3b2d625888eb9119262b9e1S3Bucket15EACB62:
    Type: String
    Description: S3 bucket for asset "76a94b95d56ca2686c80c6a1de45b4fa6eedb211f3b2d625888eb9119262b9e1"
  AssetParameters76a94b95d56ca2686c80c6a1de45b4fa6eedb211f3b2d625888eb9119262b9e1S3VersionKey5C1E1150:
    Type: String
    Description: S3 key for asset version "76a94b95d56ca2686c80c6a1de45b4fa6eedb211f3b2d625888eb9119262b9e1"
  AssetParameters76a94b95d56ca2686c80c6a1de45b4fa6eedb211f3b2d625888eb9119262b9e1ArtifactHash5A106CFA:
    Type: String
    Description: Artifact hash for asset "76a94b95d56ca2686c80c6a1de45b4fa6eedb211f3b2d625888eb9119262b9e1"
  AssetParametersef971dff2711b995f77d97f886e129f0426d6e66b9a473cdace92e2de438a07dS3BucketABB367F9:
    Type: String
    Description: S3 bucket for asset "ef971dff2711b995f77d97f886e129f0426d6e66b9a473cdace92e2de438a07d"
  AssetParametersef971dff2711b995f77d97f886e129f0426d6e66b9a473cdace92e2de438a07dS3VersionKey62254DDF:
    Type: String
    Description: S3 key for asset version "ef971dff2711b995f77d97f886e129f0426d6e66b9a473cdace92e2de438a07d"
  AssetParametersef971dff2711b995f77d97f886e129f0426d6e66b9a473cdace92e2de438a07dArtifactHash68BEDB33:
    Type: String
    Description: Artifact hash for asset "ef971dff2711b995f77d97f886e129f0426d6e66b9a473cdace92e2de438a07d"
  AssetParametersc9099862ce7d3cf08e88999e00c06aeec043fadeecbe65d08e6d38a0aba86b82S3BucketA56956B1:
    Type: String
    Description: S3 bucket for asset "c9099862ce7d3cf08e88999e00c06aeec043fadeecbe65d08e6d38a0aba86b82"
  AssetParametersc9099862ce7d3cf08e88999e00c06aeec043fadeecbe65d08e6d38a0aba86b82S3VersionKey5E698AAB:
    Type: String
    Description: S3 key for asset version "c9099862ce7d3cf08e88999e00c06aeec043fadeecbe65d08e6d38a0aba86b82"
  AssetParametersc9099862ce7d3cf08e88999e00c06aeec043fadeecbe65d08e6d38a0aba86b82ArtifactHashECD87598:
    Type: String
    Description: Artifact hash for asset "c9099862ce7d3cf08e88999e00c06aeec043fadeecbe65d08e6d38a0aba86b82"
  AssetParameterse1e526eddaad559b80df4b12758173f22a837dba8bc3ae48ff7970ea9fa187b0S3Bucket6A9B315A:
    Type: String
    Description: S3 bucket for asset "e1e526eddaad559b80df4b12758173f22a837dba8bc3ae48ff7970ea9fa187b0"
  AssetParameterse1e526eddaad559b80df4b12758173f22a837dba8bc3ae48ff7970ea9fa187b0S3VersionKey5CB52CA2:
    Type: String
    Description: S3 key for asset version "e1e526eddaad559b80df4b12758173f22a837dba8bc3ae48ff7970ea9fa187b0"
  AssetParameterse1e526eddaad559b80df4b12758173f22a837dba8bc3ae48ff7970ea9fa187b0ArtifactHashF388ED27:
    Type: String
    Description: Artifact hash for asset "e1e526eddaad559b80df4b12758173f22a837dba8bc3ae48ff7970ea9fa187b0"
  AssetParameters2ac79fecf84f3ba901d27913166f7d9cb869cfc44f5c2540d2d4c66c287b96b9S3Bucket3F2BBAC7:
    Type: String
    Description: S3 bucket for asset "2ac79fecf84f3ba901d27913166f7d9cb869cfc44f5c2540d2d4c66c287b96b9"
  AssetParameters2ac79fecf84f3ba901d27913166f7d9cb869cfc44f5c2540d2d4c66c287b96b9S3VersionKeyA723C277:
    Type: String
    Description: S3 key for asset version "2ac79fecf84f3ba901d27913166f7d9cb869cfc44f5c2540d2d4c66c287b96b9"
  AssetParameters2ac79fecf84f3ba901d27913166f7d9cb869cfc44f5c2540d2d4c66c287b96b9ArtifactHashF8780A41:
    Type: String
    Description: Artifact hash for asset "2ac79fecf84f3ba901d27913166f7d9cb869cfc44f5c2540d2d4c66c287b96b9"
  AssetParameters5e44d2fdd7f8f5861332f51d1cf1b092c108d137c79dbe5b3d3bd489826bb272S3Bucket106F56FA:
    Type: String
    Description: S3 bucket for asset "5e44d2fdd7f8f5861332f51d1cf1b092c108d137c79dbe5b3d3bd489826bb272"
  AssetParameters5e44d2fdd7f8f5861332f51d1cf1b092c108d137c79dbe5b3d3bd489826bb272S3VersionKeyBE076A88:
    Type: String
    Description: S3 key for asset version "5e44d2fdd7f8f5861332f51d1cf1b092c108d137c79dbe5b3d3bd489826bb272"
  AssetParameters5e44d2fdd7f8f5861332f51d1cf1b092c108d137c79dbe5b3d3bd489826bb272ArtifactHashDE87AD86:
    Type: String
    Description: Artifact hash for asset "5e44d2fdd7f8f5861332f51d1cf1b092c108d137c79dbe5b3d3bd489826bb272"
  AssetParameters9ad807637ff239132269cd9b57c1b74a11f62616005dd978563c9dbed877f27cS3Bucket97807D65:
    Type: String
    Description: S3 bucket for asset "9ad807637ff239132269cd9b57c1b74a11f62616005dd978563c9dbed877f27c"
  AssetParameters9ad807637ff239132269cd9b57c1b74a11f62616005dd978563c9dbed877f27cS3VersionKeyB71B22BD:
    Type: String
    Description: S3 key for asset version "9ad807637ff239132269cd9b57c1b74a11f62616005dd978563c9dbed877f27c"
  AssetParameters9ad807637ff239132269cd9b57c1b74a11f62616005dd978563c9dbed877f27cArtifactHash746E4B4F:
    Type: String
    Description: Artifact hash for asset "9ad807637ff239132269cd9b57c1b74a11f62616005dd978563c9dbed877f27c"
  AssetParameters8493ecc6f1c112594d2591a57377442e259402492c63c8117dcef281df67931dS3Bucket97E4C1D0:
    Type: String
    Description: S3 bucket for asset "8493ecc6f1c112594d2591a57377442e259402492c63c8117dcef281df67931d"
  AssetParameters8493ecc6f1c112594d2591a57377442e259402492c63c8117dcef281df67931dS3VersionKeyA7A5A6D7:
    Type: String
    Description: S3 key for asset version "8493ecc6f1c112594d2591a57377442e259402492c63c8117dcef281df67931d"
  AssetParameters8493ecc6f1c112594d2591a57377442e259402492c63c8117dcef281df67931dArtifactHash3AB5A652:
    Type: String
    Description: Artifact hash for asset "8493ecc6f1c112594d2591a57377442e259402492c63c8117dcef281df67931d"
  AssetParametersd32f183157995b9defe578ae7408426d95c203479c7cd99d3976c85870754313S3Bucket7F173C80:
    Type: String
    Description: S3 bucket for asset "d32f183157995b9defe578ae7408426d95c203479c7cd99d3976c85870754313"
  AssetParametersd32f183157995b9defe578ae7408426d95c203479c7cd99d3976c85870754313S3VersionKey7E0F83FB:
    Type: String
    Description: S3 key for asset version "d32f183157995b9defe578ae7408426d95c203479c7cd99d3976c85870754313"
  AssetParametersd32f183157995b9defe578ae7408426d95c203479c7cd99d3976c85870754313ArtifactHash7F0805FC:
    Type: String
    Description: Artifact hash for asset "d32f183157995b9defe578ae7408426d95c203479c7cd99d3976c85870754313"
  AssetParameters3329414b9eae51ff2ac7b7a43053dfbedfa62a89bdf1c034596455f9728f1533S3Bucket6591DBF0:
    Type: String
    Description: S3 bucket for asset "3329414b9eae51ff2ac7b7a43053dfbedfa62a89bdf1c034596455f9728f1533"
  AssetParameters3329414b9eae51ff2ac7b7a43053dfbedfa62a89bdf1c034596455f9728f1533S3VersionKey8022A003:
    Type: String
    Description: S3 key for asset version "3329414b9eae51ff2ac7b7a43053dfbedfa62a89bdf1c034596455f9728f1533"
  AssetParameters3329414b9eae51ff2ac7b7a43053dfbedfa62a89bdf1c034596455f9728f1533ArtifactHashD14FAA69:
    Type: String
    Description: Artifact hash for asset "3329414b9eae51ff2ac7b7a43053dfbedfa62a89bdf1c034596455f9728f1533"
  AssetParametersc205e39fe917588737fe5e4a09d2f24d243dfe0a136300a9eab348fd75d129a2S3BucketD44B51EE:
    Type: String
    Description: S3 bucket for asset "c205e39fe917588737fe5e4a09d2f24d243dfe0a136300a9eab348fd75d129a2"
  AssetParametersc205e39fe917588737fe5e4a09d2f24d243dfe0a136300a9eab348fd75d129a2S3VersionKey5E0F095F:
    Type: String
    Description: S3 key for asset version "c205e39fe917588737fe5e4a09d2f24d243dfe0a136300a9eab348fd75d129a2"
  AssetParametersc205e39fe917588737fe5e4a09d2f24d243dfe0a136300a9eab348fd75d129a2ArtifactHash3A5BE153:
    Type: String
    Description: Artifact hash for asset "c205e39fe917588737fe5e4a09d2f24d243dfe0a136300a9eab348fd75d129a2"
  AssetParametersbd41b5ccf2a603860e796b7d17882153e4e88060e65d0d0328cdb019103c9ef5S3Bucket4B1CB4A0:
    Type: String
    Description: S3 bucket for asset "bd41b5ccf2a603860e796b7d17882153e4e88060e65d0d0328cdb019103c9ef5"
  AssetParametersbd41b5ccf2a603860e796b7d17882153e4e88060e65d0d0328cdb019103c9ef5S3VersionKey98F22E2E:
    Type: String
    Description: S3 key for asset version "bd41b5ccf2a603860e796b7d17882153e4e88060e65d0d0328cdb019103c9ef5"
  AssetParametersbd41b5ccf2a603860e796b7d17882153e4e88060e65d0d0328cdb019103c9ef5ArtifactHash201DA60C:
    Type: String
    Description: Artifact hash for asset "bd41b5ccf2a603860e796b7d17882153e4e88060e65d0d0328cdb019103c9ef5"
  AssetParametersad491858bff2daae3b82957d0d148f31813e6c8690bc56a59d64ce7f5f86fca4S3Bucket31C5E950:
    Type: String
    Description: S3 bucket for asset "ad491858bff2daae3b82957d0d148f31813e6c8690bc56a59d64ce7f5f86fca4"
  AssetParametersad491858bff2daae3b82957d0d148f31813e6c8690bc56a59d64ce7f5f86fca4S3VersionKey6BC3326D:
    Type: String
    Description: S3 key for asset version "ad491858bff2daae3b82957d0d148f31813e6c8690bc56a59d64ce7f5f86fca4"
  AssetParametersad491858bff2daae3b82957d0d148f31813e6c8690bc56a59d64ce7f5f86fca4ArtifactHash3A1FAE82:
    Type: String
    Description: Artifact hash for asset "ad491858bff2daae3b82957d0d148f31813e6c8690bc56a59d64ce7f5f86fca4"
  AssetParametersa28cef2fa03a13fb8a3eb5c0bb8dc22495f0ab2d68c0436b1451ae578424829aS3Bucket4E6B0FF8:
    Type: String
    Description: S3 bucket for asset "a28cef2fa03a13fb8a3eb5c0bb8dc22495f0ab2d68c0436b1451ae578424829a"
  AssetParametersa28cef2fa03a13fb8a3eb5c0bb8dc22495f0ab2d68c0436b1451ae578424829aS3VersionKey416B108B:
    Type: String
    Description: S3 key for asset version "a28cef2fa03a13fb8a3eb5c0bb8dc22495f0ab2d68c0436b1451ae578424829a"
  AssetParametersa28cef2fa03a13fb8a3eb5c0bb8dc22495f0ab2d68c0436b1451ae578424829aArtifactHashF5E5BE0B:
    Type: String
    Description: Artifact hash for asset "a28cef2fa03a13fb8a3eb5c0bb8dc22495f0ab2d68c0436b1451ae578424829a"
Outputs:
  presenceapi:
    Description: Presence api endpoint
    Value:
      Fn::GetAtt:
        - PresenceAPI097D0E1D
        - GraphQLUrl
    Export:
      Name: presenceEndpoint
  region:
    Description: Presence api region
    Value: us-west-2
    Export:
      Name: region

